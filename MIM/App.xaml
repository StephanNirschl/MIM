<Application x:Class="MIM.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:MIM"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
                 <!--Control font.-->
        <Style TargetType="Button">
            <Setter Property="FontFamily" Value="Segoe UI"/>
        </Style>
        <Style TargetType="Label">
            <Setter Property="FontFamily" Value="Segoe UI"/>
        </Style>
        <Style TargetType="CheckBox">
            <Setter Property="FontFamily" Value="Segoe UI"/>
        </Style>
        <Style TargetType="TextBox">
            <Setter Property="FontFamily" Value="Segoe UI"/>
        </Style>
        <Style TargetType="ListViewItem">
            <Setter Property="FontFamily" Value="Segoe UI"/>
        </Style>

        <!--Control colors.-->
        <Color x:Key="Foreground">#FFD89647</Color>
        <Color x:Key="Foreground1">#FF8D8D8D</Color>
        
        <Color x:Key="BorderMediumColor">#FF888888</Color>



        

        <Style x:Key="MainWindows" TargetType="{x:Type Window}">
            <Setter Property="ResizeMode" Value="CanResize"  ></Setter>
            <Setter Property="WindowStyle" Value="None"></Setter>
            <Setter Property="Topmost" Value="False"></Setter>
            <Setter Property="Height" Value="400"></Setter>
            <Setter Property="Width" Value="21"></Setter>
            <Setter Property="Background" Value="{x:Null}"></Setter>
            <Setter Property="Foreground" Value="{x:Null}"></Setter>
            <Setter Property="BorderBrush" Value=" Black"></Setter>
            <Setter Property="BorderThickness" Value="0.5"></Setter>
        </Style>

        
        
        
        <Style x:Key="ButtonS1" TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}" >
            <Setter Property="Width" Value="100"/>
            <Setter Property="Height" Value="20"/>
            <Setter Property="Margin" Value="0"/>
            <Setter Property="FontSize" Value="12px"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Foreground">
                <Setter.Value>
                    <SolidColorBrush Opacity="1" Color="{StaticResource Foreground1}"/>
                </Setter.Value>
            </Setter>
            <Setter Property="Background"  >
                <Setter.Value>
                    <SolidColorBrush Opacity="1" Color="#FF1F1F1F"/>
                </Setter.Value>
            </Setter>
            <Setter Property="BorderBrush" Value="{x:Null}"/>

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Foreground">
                        <Setter.Value>
                            <SolidColorBrush Color="{StaticResource Foreground}"/>
                        </Setter.Value>
                    </Setter>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Foreground" Value="#FF404040"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="MainWindow_Rectangel" TargetType="{x:Type Rectangle}">
            <Setter Property="Width" Value="75"></Setter>
            <Setter Property="Height" Value="1"></Setter>
            <Setter Property="StrokeThickness" Value="2"></Setter>
            <Setter Property="RadiusY" Value="1"></Setter>
            <Setter Property="RadiusX" Value="1"></Setter>
            <Setter Property="Margin" Value="-100,0,0,-16"></Setter>
            <Setter Property="Stroke" Value="Black"></Setter>
            <Setter Property="IsEnabled" Value="False"></Setter>
        </Style>




        <Style x:Key="ButtonHIDE" TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
            <Setter Property="Width" Value="15"/>
            <Setter Property="Height" Value="15"/>
            <Setter Property="Margin" Value="0,0,55,0"/>
            <Setter Property="HorizontalAlignment" Value="Right"/>
            <Setter Property="Grid.Column" Value="0"/>
            <Setter Property="Grid.Row" Value="0"/>
            <Setter Property="Cursor" Value="Hand"/>

            <Setter Property="Background"  >
                <Setter.Value>
                    <ImageBrush ImageSource="/Images/ico/mini.ico" TileMode="None"/>
                </Setter.Value>
            </Setter>
            <Setter Property="BorderBrush" Value="{x:Null}"/>


            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

            
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background"  >
                        <Setter.Value>
                            <ImageBrush ImageSource="/Images/ico/mini_select.ico" TileMode="None"/>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="Buttonminmax" TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
            <Setter Property="Width" Value="15"/>
            <Setter Property="Height" Value="15"/>
            <Setter Property="Margin" Value="0,0,35,0"/>
            <Setter Property="HorizontalAlignment" Value="Right"/>
            <Setter Property="Grid.Column" Value="0"/>
            <Setter Property="Grid.Row" Value="0"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Background"  >
                <Setter.Value>
                    <ImageBrush ImageSource="/Images/ico/multiply.ico" TileMode="None"/>
                </Setter.Value>
            </Setter>
            <Setter Property="BorderBrush" Value="{x:Null}"/>


            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>


            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background"  >
                        <Setter.Value>
                            <ImageBrush ImageSource="/Images/ico/multiply_select.ico" TileMode="None"/>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="ButtonCLOSE" TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
            <Setter Property="Width" Value="15"/>
            <Setter Property="Height" Value="15"/>
            <Setter Property="Margin" Value="0,0,10,0"/>
            <Setter Property="HorizontalAlignment" Value="Right"/>
            <Setter Property="Grid.Column" Value="0"/>
            <Setter Property="Grid.Row" Value="0"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Background"  >
                <Setter.Value>
                    <ImageBrush ImageSource="/Images/ico/multiply.ico" TileMode="None"/>
                </Setter.Value>
            </Setter>
            <Setter Property="BorderBrush" Value="{x:Null}"/>


            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>


            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background"  >
                        <Setter.Value>
                            <ImageBrush ImageSource="/Images/ico/multiply_select.ico" TileMode="None"/>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="BorderB1" TargetType="{x:Type Border}">
            <Setter Property="Background" Value="#FF131212"></Setter>
        </Style>

        <Style x:Key="LOAD_Pb" TargetType="{x:Type ProgressBar}">
            <Setter Property="Width" Value="Auto"></Setter>
            <Setter Property="Height" Value="5"></Setter>
            <Setter Property="Margin" Value="60,0,40,0"></Setter>
            <Setter Property="Background" Value="#FF959595"></Setter>
            <Setter Property="Foreground">
                <Setter.Value>
                    <SolidColorBrush Color="{StaticResource Foreground}"/>
                </Setter.Value>
            </Setter>
        </Style>
        
        <Style x:Key="SubWindows" TargetType="{x:Type Window}">
            <Setter Property="ResizeMode" Value="NoResize"></Setter>
            <Setter Property="WindowStyle" Value="None"></Setter>
            <Setter Property="BorderBrush" Value=" Black"></Setter>
            <Setter Property="BorderThickness" Value="2"></Setter>
            <Setter Property="Topmost" Value="False"></Setter>
            <Setter Property="ShowInTaskbar" Value="False"></Setter>
        </Style>

        <Style x:Key="ScrollViewer_default" TargetType="{x:Type ScrollViewer}">

            <Setter Property="OverridesDefaultStyle" Value="True" />
            <Setter Property="Background">
                <Setter.Value>
                    <SolidColorBrush Color="Black" Opacity="0.4"/>
                </Setter.Value>
            </Setter>


            <Setter Property="VerticalScrollBarVisibility" Value="Hidden"/>

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ScrollViewer}">
                        <Grid>

                            <Grid Background="{TemplateBinding Background}">
                                <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" 
                                                        Margin="{TemplateBinding Padding}" Content="{TemplateBinding Content}" 
                                                        ContentTemplate="{TemplateBinding ContentTemplate}" 
                                                        CanContentScroll="{TemplateBinding CanContentScroll}"/>
                            </Grid>

                            <Grid Background="Transparent">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>

                                <ScrollBar x:Name="PART_VerticalScrollBar"
                                           Grid.Column="1"
                                           Minimum="0.0"
                                           Maximum="{TemplateBinding ScrollableHeight}"
                                           ViewportSize="{TemplateBinding ViewportHeight}"
                                           Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=VerticalOffset, Mode=OneWay}"
                                           Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"        
                                           Cursor="Arrow"
                                           AutomationProperties.AutomationId="VerticalScrollBar"/>
                                <ScrollBar
                                           x:Name="PART_HorizontalScrollBar"
                                           Orientation="Horizontal"
                                           Grid.Row="1"
                                           Minimum="0.0"
                                           Maximum="{TemplateBinding ScrollableWidth}"
                                           ViewportSize="{TemplateBinding ViewportWidth}"
                                           Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=HorizontalOffset, Mode=OneWay}"
                                           Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                                           Cursor="Arrow"
                                           AutomationProperties.AutomationId="HorizontalScrollBar"/>
                            </Grid>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

            <Style.Triggers>
                <Trigger Property="IsEnabled" 
                         Value="false">
                    <Setter Property="Foreground" 
                            Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                </Trigger>
                <Trigger Property="IsMouseOver"
                         Value="true">
                    <Setter Property="VerticalScrollBarVisibility"
                            Value="Hidden"/>
                </Trigger>
            </Style.Triggers>

        </Style>

        <Style x:Key="ScrollViewer" TargetType="{x:Type ScrollViewer}">

            <Setter Property="OverridesDefaultStyle" Value="True" />
            <Setter Property="Width" Value="800 " />
            <Setter Property="Height" Value="Auto" />
            <Setter Property="Background">
                <Setter.Value>
                    <SolidColorBrush Color="Black" Opacity="0.4"/>
                </Setter.Value>
            </Setter>
            <Setter Property="Margin" Value="40,10,30,10" />
            <Setter Property="HorizontalAlignment" Value="Center" />

            <Setter Property="VerticalScrollBarVisibility" Value="Hidden"/>

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ScrollViewer}">
                        <Grid>

                            <Grid Background="{TemplateBinding Background}">
                                <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" 
                                                        Margin="{TemplateBinding Padding}" Content="{TemplateBinding Content}" 
                                                        ContentTemplate="{TemplateBinding ContentTemplate}" 
                                                        CanContentScroll="{TemplateBinding CanContentScroll}"/>
                            </Grid>

                            <Grid Background="Transparent">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>

                                <ScrollBar x:Name="PART_VerticalScrollBar"
                                           Grid.Column="1"
                                           Minimum="0.0"
                                           Maximum="{TemplateBinding ScrollableHeight}"
                                           ViewportSize="{TemplateBinding ViewportHeight}"
                                           Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=VerticalOffset, Mode=OneWay}"
                                           Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"        
                                           Cursor="Arrow"
                                           AutomationProperties.AutomationId="VerticalScrollBar"/>
                                <ScrollBar
                                           x:Name="PART_HorizontalScrollBar"
                                           Orientation="Horizontal"
                                           Grid.Row="1"
                                           Minimum="0.0"
                                           Maximum="{TemplateBinding ScrollableWidth}"
                                           ViewportSize="{TemplateBinding ViewportWidth}"
                                           Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=HorizontalOffset, Mode=OneWay}"
                                           Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                                           Cursor="Arrow"
                                           AutomationProperties.AutomationId="HorizontalScrollBar"/>
                            </Grid>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

            <Style.Triggers>
                <Trigger Property="IsEnabled" 
                         Value="false">
                    <Setter Property="Foreground" 
                            Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                </Trigger>
                <Trigger Property="IsMouseOver"
                         Value="true">
                    <Setter Property="VerticalScrollBarVisibility"
                            Value="Visible"/>
                </Trigger>
            </Style.Triggers>

        </Style>


        <!-- side bar START -->

        <Style x:Key="sp_sidebar" TargetType="{x:Type StackPanel}">
            <Setter Property="Width" Value="50"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Margin" Value="5,0,0,0"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
           
            



            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Trigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Duration="0:0:0.20" To="225" Storyboard.TargetProperty="Width" />
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.EnterActions>


                    <Trigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Duration="0:0:0.20" To="50" Storyboard.TargetProperty="Width" />
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.ExitActions>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="sidebar" TargetType="{x:Type DockPanel}">
            <Setter Property="Margin" Value="1,1,1,1"/>
            <Setter Property="Background">
                <Setter.Value>
                    <SolidColorBrush Color="#FF3E3E3E" Opacity="0.7"/>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- side bar END -->


        <!-- LOG LIST VIEW START -->

        <Style x:Key="lv_log" TargetType="{x:Type ListView}">
            <Setter Property="Background">
                <Setter.Value>
                    <SolidColorBrush Color="Black" Opacity="0.4"/>
                </Setter.Value>
            </Setter>
            <Setter Property="Foreground" Value="#FFB8B8B8" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Hidden" />
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Hidden" />


        </Style>

        <Style x:Key="lv_myHeaderStyle" TargetType="{x:Type GridViewColumnHeader}">
            <Setter Property="Background">
                <Setter.Value>
                    <SolidColorBrush Color="#FF252525" Opacity="0.4"/>
                </Setter.Value>
            </Setter>
            <Setter Property="BorderBrush" Value="{x:Null}" />
            <Setter Property="Foreground" Value="#FFB4B4B4" />
            <Setter Property="HorizontalAlignment" Value="Stretch" />
            <Setter Property="Padding" Value="10,0,0,0" />

            <!-- Template um Gradient zu deaktivieren -->
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
                        <TextBlock Text="{TemplateBinding Content}"
                                   Background="{TemplateBinding Background}"
                                   Foreground="{TemplateBinding Foreground}"
                                   HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                   Padding="{TemplateBinding Padding}"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>


            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Foreground" >
                        <Setter.Value>
                            <SolidColorBrush Color="{StaticResource Foreground}"/>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Background">
                        <Setter.Value>
                            <SolidColorBrush Color="Black" Opacity="0.4"/>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="BorderThickness" Value="0"></Setter>
                </Trigger>
                
                <Trigger Property="IsMouseCaptured" Value="True">
                    <Setter Property="Foreground" >
                        <Setter.Value>
                            <SolidColorBrush Color="{StaticResource Foreground}"/>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Background">
                        <Setter.Value>
                            <SolidColorBrush Color="Black" Opacity="0.4"/>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="BorderThickness" Value="0"></Setter>
                    <Setter Property="FontWeight" Value="Bold"></Setter>
                </Trigger>
            </Style.Triggers>

        </Style>

        <Style x:Key="lvItem_log" TargetType="{x:Type ListViewItem}" BasedOn="{StaticResource {x:Type ListViewItem}}">
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="FontSize" Value="11" />

            <!-- Template um Gradient zu deaktivieren -->
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListViewItem}">
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                SnapsToDevicePixels="true">
                        <GridViewRowPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>


            <Style.Triggers>
                
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Foreground" >
                        <Setter.Value>
                            <SolidColorBrush Color="Black"/>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Background">
                        <Setter.Value>
                            <SolidColorBrush Color="{StaticResource Foreground}" Opacity="0.5"/>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="BorderThickness" Value="0"></Setter>
                    <Setter Property="FontWeight" Value="Black"></Setter>
                    
                </Trigger>
                
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Foreground" >
                        <Setter.Value>
                            <SolidColorBrush Color="{StaticResource Foreground}"/>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Background">
                        <Setter.Value>
                            <SolidColorBrush Color="Black" Opacity="0.3"/>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="BorderThickness" Value="0"></Setter>
                </Trigger>
                
            </Style.Triggers>
            
        </Style>

        <!-- LOG LIST VIEW END -->


        

        <!-- Setting START -->

        <Style x:Key="SETTING_grid" TargetType="{x:Type Grid}">
            <Setter Property="Width" Value="20"/>
            <Setter Property="Height" Value="90"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Background" Value="#FF1B1B1B"/>
            <Setter Property="Margin" Value="5,0,0,0"/>
            <Setter Property="Grid.Background">
                <Setter.Value>
                    <SolidColorBrush Color="#FF252525" Opacity="0.95"/>
                </Setter.Value>
            </Setter>
            


            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Trigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Duration="0:0:0.20" To="370" Storyboard.TargetProperty="Height" />
                                <DoubleAnimation Duration="0:0:0.20" To="470" Storyboard.TargetProperty="Width" />
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.EnterActions>


                    <Trigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Duration="0:0:0.20" To="90" Storyboard.TargetProperty="Height" />
                                <DoubleAnimation Duration="0:0:0.20" To="20" Storyboard.TargetProperty="Width" />
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.ExitActions>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="SETTING_HEADER_lbl" TargetType="{x:Type Label}" BasedOn="{StaticResource {x:Type Label}}">
            <Setter Property="Width" Value="90"/>
            <Setter Property="Height" Value="20"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Foreground">
                <Setter.Value>
                    <SolidColorBrush Opacity="1" Color="#FF8D8D8D"/>
                </Setter.Value>
            </Setter>
            <Setter Property="Background"  >
                <Setter.Value>
                    <SolidColorBrush Opacity="1" Color="#FF1F1F1F"/>
                </Setter.Value>
            </Setter>
            <Setter Property="BorderBrush" Value="{x:Null}"/>
            <Setter Property="Margin" Value="-50,-50,-50,-50"></Setter>
            <Setter Property="RenderTransformOrigin" Value="0.5,0.5" ></Setter>
            <Setter Property="RenderTransform">
                <Setter.Value>
                    <RotateTransform Angle="+90"/>
                </Setter.Value>
            </Setter>
            <Setter Property="HorizontalAlignment" Value="Center"></Setter>
            <Setter Property="VerticalAlignment" Value="Center"></Setter>
            <Setter Property="Content" Value="S E T T I N G S"></Setter>
            
            
            
            

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Label}">
                        <Border Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>


            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Foreground" Value="#FFD89647"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Foreground" Value="#FF404040"/>
                </Trigger>
            </Style.Triggers>
            
        </Style>

        <Style x:Key="SETTINGs_label" TargetType="{x:Type Label}" BasedOn="{StaticResource {x:Type Label}}">
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="VerticalContentAlignment" Value="Bottom"/>
            <Setter Property="Foreground">
                <Setter.Value>
                     <SolidColorBrush Color="{StaticResource Foreground}"/>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="SETTINGs_CB_path" TargetType="ComboBox">
            <Setter Property="Height" Value="20"/>
            <Setter Property="Width" Value="17"/>
            <Setter Property="Padding" Value="0,3,0,0"/>
            <Setter Property="Background" Value="#FF959595"/>
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="BorderThickness" Value="0"></Setter>



        </Style>

        <Style x:Key="SETTINGs_tb" TargetType="{x:Type TextBox}" BasedOn="{StaticResource {x:Type TextBox}}">
            <Setter Property="Margin" Value="5,5,5,5"/>
            <Setter Property="Height" Value="20"/>
            <Setter Property="Padding" Value="0,3,0,0"/>
            <Setter Property="Background" Value="#FF959595"/>
            <Setter Property="SelectionBrush">
                <Setter.Value>
                    <SolidColorBrush Color="{StaticResource Foreground}"/>
                </Setter.Value>
            </Setter>
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="BorderThickness" Value="0"></Setter>


        </Style>

        <Style x:Key="SETTING_checkbox" TargetType="{x:Type CheckBox}" BasedOn="{StaticResource {x:Type CheckBox}}">
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Margin" Value="5,0,0,0"/>
            <Setter Property="BorderThickness" Value="0"></Setter>
            <Setter Property="SnapsToDevicePixels" Value="true"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="Foreground" Value="White"/>

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="CheckBox">
                        <BulletDecorator Background="Transparent">
                            <BulletDecorator.Bullet>
                                <Border x:Name="Border" Width="15" Height="15" CornerRadius="2" Background="#FF1B1B1B" BorderThickness="0">
                                    <Path Width="9" Height="9" x:Name="CheckMark" SnapsToDevicePixels="False" Stroke="#FF0077C9" StrokeThickness="2" Data="M 0 4 L 3 8 8 0" />
                                </Border>
                            </BulletDecorator.Bullet>
                            <ContentPresenter Margin="4,0,0,0" VerticalAlignment="Center" HorizontalAlignment="Left" RecognizesAccessKey="True"/>
                        </BulletDecorator>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="false">
                                <Setter TargetName="CheckMark" Property="Visibility" Value="Collapsed"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="{x:Null}">
                                <Setter TargetName="CheckMark" Property="Data" Value="M 0 8 L 8 0" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="Border" Property="Background" Value="#FF131313" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter TargetName="CheckMark" Property="Stroke" Value="#FF6C6C6C"/>
                                <Setter Property="Foreground" Value="Gray"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Setting END -->


        
        
        <Style x:Key="About_Lbl" TargetType="{x:Type Label}" BasedOn="{StaticResource {x:Type Label}}">
            <Setter Property="FontSize" Value="15"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Foreground">
                <Setter.Value>
                    <SolidColorBrush Color="{StaticResource Foreground}"/>
                </Setter.Value>
            </Setter>
        </Style>

        


    </Application.Resources>
</Application>
